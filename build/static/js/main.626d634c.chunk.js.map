{"version":3,"sources":["components/AddExpense.js","components/Categories.js","components/Expenses.js","App.js","index.js"],"names":["config","require","AddExpense","userID","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","useState","categories","setCategories","amount","category","date","description","transactionInfo","setTransactionInfo","useEffect","console","log","fetch","backend_url","method","body","JSON","stringify","user_id","headers","then","res","text","parse","catch","err","handleChange","event","target","name","value","categoryOptions","map","id","Container","className","Row","Col","Form","Group","Label","Control","type","onChange","as","placeholder","Button","onClick","trans_info","Categories","fetchCategories","is_expense","catToAdd","setCatToAdd","loading","setLoading","handleDelete","setTimeout","catTableBody","catTable","Table","striped","bordered","hover","addCatForm","numDaysinMonth","Expenses","fetchTransactions","start","dates","end","setTransactions","transactions","parseInt","getStartEnd","setDates","dateInput","expenseTableBody","transaction","find","category_id","substring","expenseTable","totalSpent","forEach","summary","App","isLoggedIn","setIsLoggedIn","setUserID","setName","Navbar","Brand","Text","to","clientId","buttonText","onLogoutSuccess","googleUser","onSuccess","profile","getBasicProfile","getAuthResponse","id_token","getId","getName","onFailure","error","cookiePolicy","isSignedIn","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.626d634c.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link\r\n// } from \"react-router-dom\";\r\n\r\n// import './App.css';\r\n\r\nconst config = require('../frontend-config.json');\r\n\r\nfunction AddExpense({ userID }) {\r\n\r\n    const fetchCategories = () => {\r\n        console.log('id in fetch', userID);\r\n        fetch(`http://${config.backend_url}/get-categories`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({user_id: userID}),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.text())\r\n        .then(res => setCategories(JSON.parse(res)))\r\n        .catch(err => err);\r\n    }\r\n\r\n    const addTransaction = () => {\r\n        fetch(`http://${config.backend_url}/add-transaction`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                trans_info: transactionInfo,\r\n                user_id: userID\r\n            }),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.text())\r\n        .then(res => console.log(res))\r\n        .catch(err => err);\r\n    }\r\n\r\n    var today = new Date();\r\n    const dd = String(today.getDate()).padStart(2, '0');\r\n    const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    const yyyy = today.getFullYear();\r\n\r\n    today = yyyy + '-' + mm + '-' + dd;\r\n\r\n    const [categories, setCategories] = useState([])\r\n    const [transactionInfo, setTransactionInfo] = useState({\r\n        amount: 0,\r\n        category: null,\r\n        date: today,\r\n        description: ''\r\n    })\r\n\r\n    // TODO: maybe use a setTimeout to set the default category\r\n\r\n    useEffect(() => {\r\n        fetchCategories();\r\n    }, [userID])\r\n\r\n    const handleChange = event => {\r\n        setTransactionInfo({\r\n            ...transactionInfo,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        console.log('amount:', transactionInfo.amount, '-- category:', transactionInfo.category, '-- description:', transactionInfo.description);\r\n        addTransaction();\r\n    }\r\n\r\n    const categoryOptions = (\r\n        categories.map(category => {\r\n            return <option key={category.id} value={category.id}>{category.name}</option>\r\n        })\r\n    )\r\n\r\n    return (\r\n        <Container className='add-expense'>\r\n            <Row>\r\n                <Col>\r\n                    <span className=\"page-title\">Add Transaction</span>\r\n                    <Form className=\"mt-3 mx-4\">\r\n                        <Form.Group className=\"mt-4\">\r\n                            <Form.Label>Amount</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                value={transactionInfo.amount}\r\n                                name='amount'\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mt-4\">\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                value={transactionInfo.category}\r\n                                name='category'\r\n                                onChange={handleChange}\r\n                            >\r\n                                {categoryOptions}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mt-4\">\r\n                            <Form.Label>Date</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={transactionInfo.date}\r\n                                name='date'\r\n                                onChange={handleChange}\r\n                                placeholder=\"YEAR-MONTH-DAY\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mt-4\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={transactionInfo.description}\r\n                                name='description'\r\n                                onChange={handleChange}\r\n                                placeholder=\"desc\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                    <Button onClick={handleSubmit}>Add</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default AddExpense;\r\n","import { useState, useEffect } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n// import './App.css';\r\n\r\nconst config = require('../frontend-config.json');\r\n\r\nfunction Categories({ userID }) {\r\n    const fetchCategories = () => {\r\n        console.log('id in fetch', userID);\r\n        fetch(`http://${config.backend_url}/get-categories`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({user_id: userID}),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.text())\r\n        .then(res => setCategories(JSON.parse(res)))\r\n        .catch(err => err);\r\n    }\r\n\r\n    const addCategory = () => {\r\n        fetch(`http://${config.backend_url}/add-category`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify(catToAdd),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.text())\r\n        .then(res => console.log(res))\r\n        .catch(err => err);\r\n    }\r\n\r\n    const deleteCategory = (id) => {\r\n        fetch(`http://${config.backend_url}/delete-category`, {\r\n            method: 'DELETE',\r\n            body: JSON.stringify({id}),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.text())\r\n        .then(res => console.log(res))\r\n        .catch(err => err);\r\n    }\r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [catToAdd, setCatToAdd] = useState({\r\n        name: '',\r\n        is_expense: true,\r\n        user_id: userID\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchCategories();\r\n    }, [userID])\r\n\r\n    const handleChange = event => {\r\n        console.log(event.target.name, event.target.value);\r\n        setCatToAdd({\r\n            ...catToAdd,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const handleDelete = event => {\r\n        deleteCategory(event.target.id)\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            fetchCategories();\r\n            console.log('not loading')\r\n            setLoading(false);\r\n        }, 1000);\r\n    }\r\n\r\n    const catTableBody = (\r\n        categories.map(category => {\r\n            return (\r\n                <tr key={category.id}>\r\n                    <td>{category.name}</td>\r\n                    <td>{category.is_expense ? 'Expense' : 'Income'}</td>\r\n                    <td><Button onClick={handleDelete} id={category.id}>DELETE</Button></td>\r\n                </tr>\r\n            )\r\n\r\n        })\r\n    )\r\n\r\n    const catTable = (\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>Category</th>\r\n                    <th>Type</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {catTableBody}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n\r\n    const handleSubmit = () => {\r\n        addCategory();\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            fetchCategories();\r\n            setLoading(false);\r\n        }, 1000);\r\n\r\n    }\r\n\r\n    const addCatForm = (\r\n        <div className=\"mt-3\">\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        value={catToAdd.name}\r\n                        name='name'\r\n                        onChange={handleChange}\r\n                        placeholder=\"Name of category\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Type</Form.Label>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        value={catToAdd.is_expense}\r\n                        name='is_expense'\r\n                        onChange={handleChange}\r\n                    >\r\n                        <option value={true}>Expense</option>\r\n                        <option value={false}>Income</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Form>\r\n            <Button onClick={handleSubmit}>Add</Button>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Container className='categories'>\r\n            <Row>\r\n                <Col>\r\n                    <div className='page-title'>Categories</div>\r\n                    <div className=\"mt-3\">\r\n                      {loading ? <div>Loading...</div> : null}\r\n                      {catTable}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <div className=\"page-title mt-5\">Add Category</div>\r\n                    {addCatForm}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Categories;\r\n","import { useState, useEffect } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n// import './App.css';\r\n\r\nconst config = require('../frontend-config.json');\r\n\r\nconst numDaysinMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\nfunction Expenses({ userID }) {\r\n\r\n    const fetchTransactions = () => {\r\n        fetch(`http://${config.backend_url}/get-transactions`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                start: dates.start,\r\n                end: dates.end,\r\n                user_id: userID\r\n            }),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.text())\r\n        .then(res => setTransactions(JSON.parse(res)))\r\n        .catch(err => err);\r\n    }\r\n\r\n    const fetchCategories = () => {\r\n        fetch(`http://${config.backend_url}/get-categories`, {\r\n            method: 'POST',\r\n            body: JSON.stringify({user_id: userID}),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.text())\r\n        .then(res => setCategories(JSON.parse(res)))\r\n        .catch(err => err);\r\n    }\r\n\r\n    const deleteTransaction = (id) => {\r\n        fetch(`http://${config.backend_url}/delete-transaction`, {\r\n            method: 'DELETE',\r\n            body: JSON.stringify({id}),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.text())\r\n        .then(res => console.log(res))\r\n        .catch(err => err);\r\n    }\r\n\r\n    const getStartEnd = () => {\r\n        var today = new Date();\r\n        const dd = String(today.getDate()).padStart(2, '0');\r\n        const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n\r\n        if (parseInt(dd) <= 15) {\r\n            return {\r\n                start: yyyy + '-' + mm + '-' + '01',\r\n                end: yyyy + '-' + mm + '-' + '15'\r\n            }\r\n        }\r\n        else {\r\n            const lastDayOfMonth = String(numDaysinMonth[parseInt(mm) - 1])\r\n            return {\r\n                start: yyyy + '-' + mm + '-' + '15',\r\n                end: yyyy + '-' + mm + '-' + lastDayOfMonth\r\n            }\r\n        }\r\n    }\r\n\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [dates, setDates] = useState(getStartEnd());\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchTransactions();\r\n        fetchCategories();\r\n    }, [userID])\r\n\r\n    const handleChange = event => {\r\n        setDates({\r\n            ...dates,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        fetchTransactions();\r\n        fetchCategories();\r\n    }\r\n\r\n    const handleDelete = event => {\r\n        deleteTransaction(event.target.id)\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            fetchCategories();\r\n            fetchTransactions();\r\n            setLoading(false);\r\n        }, 1000);\r\n    }\r\n\r\n    const dateInput = (\r\n        <>\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Start</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        value={dates.start}\r\n                        name='start'\r\n                        onChange={handleChange}\r\n                        placeholder=\"YEAR-MONTH-DAY\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>End</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        value={dates.end}\r\n                        name='end'\r\n                        onChange={handleChange}\r\n                        placeholder=\"YEAR-MONTH-DAY\"\r\n                    />\r\n                </Form.Group>\r\n            </Form>\r\n            <Button onClick={handleSubmit}>Submit</Button>\r\n        </>\r\n    )\r\n\r\n    const expenseTableBody = (\r\n        transactions.map(transaction => {\r\n            const category = categories.find(category => category.id === transaction.category_id) || {is_expense: true}\r\n            return (\r\n                <tr key={transaction.id}>\r\n                    <td>{transaction.description}</td>\r\n                    <td>{'$' + transaction.amount}</td>\r\n                    <td>{category.name}</td>\r\n                    <td>{transaction.date && transaction.date.substring(0, 10)}</td>\r\n                    <td className={!category.is_expense ? 'green': ''}>{category.is_expense ? 'Expense' : 'Income'}</td>\r\n                    <td><Button onClick={handleDelete} id={transaction.id}>DELETE</Button></td>\r\n                </tr>\r\n            )\r\n        })\r\n    )\r\n\r\n    const expenseTable = (\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>Description</th>\r\n                    <th>Amount</th>\r\n                    <th>Category</th>\r\n                    <th>Date</th>\r\n                    <th>Type</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {expenseTableBody}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n\r\n    const summary = () => {\r\n        let totalSpent = 0\r\n        transactions.forEach(transaction => {\r\n            const category = categories.find(category => category.id === transaction.category_id) || {is_expense: true}\r\n            category.is_expense? totalSpent += transaction.amount : totalSpent -= transaction.amount\r\n        })\r\n        return (\r\n            <div>\r\n                You spent ${totalSpent} between {dates.start} and {dates.end}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container className='edit-categories'>\r\n            <Row>\r\n                <Col className=\"page-title\">\r\n                    Transactions\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mt-5\">\r\n                <Col>\r\n                    {loading ? <div>*LOADING*</div> : null}\r\n                    {dateInput}\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mt-5\">\r\n                <Col>\r\n                    {expenseTable}\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"mt-5\">\r\n                <Col>\r\n\r\n                    {summary()}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Expenses;\r\n","import { useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport AddExpense from './components/AddExpense';\r\nimport Categories from './components/Categories';\r\nimport Expenses from './components/Expenses';\r\n\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\r\n  const [userID, setUserID] = useState();\r\n  const [name, setName] = useState();\r\n\r\n  const onSignIn = googleUser => {\r\n    console.log('in function');\r\n    console.log('user', googleUser);\r\n    var profile = googleUser.getBasicProfile();\r\n    console.log('res ', googleUser.getAuthResponse());\r\n    console.log('token', googleUser.getAuthResponse().id_token);\r\n\r\n    setIsLoggedIn(true)\r\n    setUserID(profile.getId());\r\n    setName(profile.getName());\r\n  }\r\n\r\n  const onLogout = googleUser => {\r\n    setIsLoggedIn(false)\r\n  }\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <div className='app h-100'>\r\n        <Navbar className=\"bg-purp\">\r\n          <Navbar.Brand>Quick Dollas</Navbar.Brand>\r\n          <Navbar.Text className=\"ml-2\"><Link to=\"/\">Add Transaction</Link></Navbar.Text>\r\n          <Navbar.Text className=\"ml-2\"><Link to=\"/categories\">Categories</Link></Navbar.Text>\r\n          <Navbar.Text className=\"ml-2\"><Link to='/expenses'>Transactions</Link></Navbar.Text>\r\n          <div className=\"google-stuff\">\r\n          {\r\n            isLoggedIn\r\n            ?\r\n            <GoogleLogout\r\n              clientId=\"180544136485-bildtjala9v81f48f6uq90epp6l7dhnt.apps.googleusercontent.com\"\r\n              buttonText=\"Logout\"\r\n              onLogoutSuccess={onLogout}\r\n            >\r\n            </GoogleLogout>\r\n            :\r\n            <GoogleLogin\r\n              className=\"mr-2\"\r\n              clientId=\"180544136485-bildtjala9v81f48f6uq90epp6l7dhnt.apps.googleusercontent.com\"\r\n              buttonText={\"Login with Google\"}\r\n              onSuccess={onSignIn}\r\n              onFailure={error => console.log('error with google stuff', error)}\r\n              cookiePolicy={'single_host_origin'}\r\n              isSignedIn={true}\r\n            >\r\n            </GoogleLogin>\r\n          }\r\n          </div>\r\n        </Navbar>\r\n        <div>{name ? null : 'Please sign in to use the app'}</div>\r\n        {\r\n          isLoggedIn\r\n          ? (\r\n            <div className=\"mt-4\">\r\n              <Switch>\r\n                <Route path=\"/categories\">\r\n                  <div>\r\n                    <Categories userID={userID}/>\r\n                  </div>\r\n                </Route>\r\n                <Route path=\"/expenses\">\r\n                  <div>\r\n                    <Expenses userID={userID}/>\r\n                  </div>\r\n                </Route>\r\n                <Route path=\"/\">\r\n                    <AddExpense userID={userID}/>\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          )\r\n          : null\r\n        }\r\n\r\n      </div>\r\n    </Router>\r\n\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}