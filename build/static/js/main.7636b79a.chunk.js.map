{"version":3,"sources":["components/AddExpense.js","components/Home.js","components/Categories.js","components/Expenses.js","App.js","index.js"],"names":["AddExpense","userID","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","useState","categories","setCategories","amount","category","date","description","transactionInfo","setTransactionInfo","useEffect","console","log","fetch","method","body","JSON","stringify","user_id","headers","then","res","text","parse","catch","err","handleChange","event","target","name","value","categoryOptions","map","id","Container","className","Row","Col","Form","Group","Label","Control","type","onChange","as","placeholder","Button","onClick","trans_info","Home","Categories","fetchCategories","is_expense","catToAdd","setCatToAdd","loading","setLoading","handleDelete","setTimeout","catTableBody","catTable","Table","striped","bordered","hover","addCatForm","numDaysinMonth","Expenses","fetchTransactions","start","dates","end","setTransactions","transactions","parseInt","getStartEnd","setDates","dateInput","expenseTableBody","transaction","find","category_id","substring","expenseTable","totalSpent","forEach","summary","App","isLoggedIn","setIsLoggedIn","setUserID","setName","clientId","buttonText","onSuccess","googleUser","profile","getBasicProfile","getAuthResponse","id_token","getId","getName","onFailure","error","cookiePolicy","isSignedIn","to","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7636b79a.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n// import {\r\n//   BrowserRouter as Router,\r\n//   Switch,\r\n//   Route,\r\n//   Link\r\n// } from \"react-router-dom\";\r\n\r\n// import './App.css';\r\n\r\n\r\nfunction AddExpense({ userID }) {\r\n\r\n    const fetchCategories = () => {\r\n        console.log('id in fetch', userID);\r\n        fetch(\"https://18.220.140.183:443/get-categories\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({user_id: userID}),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.text())\r\n        .then(res => setCategories(JSON.parse(res)))\r\n        .catch(err => err);\r\n    }\r\n\r\n    const addTransaction = () => {\r\n        fetch(\"https://18.220.140.183:443/add-transaction\", {\r\n            method: 'PUT',\r\n            body: JSON.stringify({\r\n                trans_info: transactionInfo,\r\n                user_id: userID\r\n            }),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.text())\r\n        .then(res => console.log(res))\r\n        .catch(err => err);\r\n    }\r\n\r\n    var today = new Date();\r\n    const dd = String(today.getDate()).padStart(2, '0');\r\n    const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n    const yyyy = today.getFullYear();\r\n\r\n    today = yyyy + '-' + mm + '-' + dd;\r\n\r\n    const [categories, setCategories] = useState([])\r\n    const [transactionInfo, setTransactionInfo] = useState({\r\n        amount: 0,\r\n        category: null,\r\n        date: today,\r\n        description: ''\r\n    })\r\n\r\n    // TODO: maybe use a setTimeout to set the default category\r\n\r\n    useEffect(() => {\r\n        fetchCategories();\r\n    }, [userID])\r\n\r\n    const handleChange = event => {\r\n        setTransactionInfo({\r\n            ...transactionInfo,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        console.log('amount:', transactionInfo.amount, '-- category:', transactionInfo.category, '-- description:', transactionInfo.description);\r\n        addTransaction();\r\n    }\r\n\r\n    const categoryOptions = (\r\n        categories.map(category => {\r\n            return <option key={category.id} value={category.id}>{category.name}</option>\r\n        })\r\n    )\r\n\r\n    return (\r\n        <Container className='add-expense'>\r\n            <Row>\r\n                <Col>\r\n                    add expense\r\n                    <Form>\r\n                        <Form.Group>\r\n                            <Form.Label>Amount</Form.Label>\r\n                            <Form.Control\r\n                                type=\"number\"\r\n                                value={transactionInfo.amount}\r\n                                name='amount'\r\n                                onChange={handleChange}\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Category</Form.Label>\r\n                            <Form.Control\r\n                                as=\"select\"\r\n                                value={transactionInfo.category}\r\n                                name='category'\r\n                                onChange={handleChange}\r\n                            >\r\n                                {categoryOptions}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Date</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={transactionInfo.date}\r\n                                name='date'\r\n                                onChange={handleChange}\r\n                                placeholder=\"YEAR-MONTH-DAY\"\r\n                            />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                value={transactionInfo.description}\r\n                                name='description'\r\n                                onChange={handleChange}\r\n                                placeholder=\"desc\"\r\n                            />\r\n                        </Form.Group>\r\n                    </Form>\r\n                    <Button onClick={handleSubmit}>Add</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default AddExpense;\r\n","import Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport AddExpense from './AddExpense';\r\n\r\n// import './App.css';\r\n\r\n\r\nfunction Home({ userID }) {\r\n  return (\r\n    <Container className='home'>\r\n        <Row>\r\n            <Col>\r\n                <AddExpense userID={userID}/>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import { useState, useEffect } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n// import './App.css';\r\n\r\nfunction Categories({ userID }) {\r\n    const fetchCategories = () => {\r\n        console.log('id in fetch', userID);\r\n        fetch(\"https://18.220.140.183:443/get-categories\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({user_id: userID}),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.text())\r\n        .then(res => setCategories(JSON.parse(res)))\r\n        .catch(err => err);\r\n    }\r\n\r\n    const addCategory = () => {\r\n        fetch(\"https://18.220.140.183:443/add-category\", {\r\n            method: 'PUT',\r\n            body: JSON.stringify(catToAdd),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.text())\r\n        .then(res => console.log(res))\r\n        .catch(err => err);\r\n    }\r\n\r\n    const deleteCategory = (id) => {\r\n        fetch(\"https://18.220.140.183:443/delete-category\", {\r\n            method: 'DELETE',\r\n            body: JSON.stringify({id}),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.text())\r\n        .then(res => console.log(res))\r\n        .catch(err => err);\r\n    }    \r\n\r\n    const [categories, setCategories] = useState([]);\r\n    const [catToAdd, setCatToAdd] = useState({\r\n        name: '',\r\n        is_expense: true,\r\n        user_id: userID\r\n    });\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchCategories();\r\n    }, [userID])\r\n\r\n    const handleChange = event => {\r\n        console.log(event.target.name, event.target.value);\r\n        setCatToAdd({\r\n            ...catToAdd,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const handleDelete = event => {\r\n        deleteCategory(event.target.id)\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            fetchCategories();\r\n            console.log('not loading')\r\n            setLoading(false); \r\n        }, 1000);\r\n    }\r\n\r\n    const catTableBody = (\r\n        categories.map(category => {\r\n            return (\r\n                <tr key={category.id}>\r\n                    <td>{category.name}</td>\r\n                    <td>{category.is_expense ? 'Expense' : 'Income'}</td>\r\n                    <td><Button onClick={handleDelete} id={category.id}>DELETE</Button></td>\r\n                </tr>\r\n            )\r\n            \r\n        })\r\n    )\r\n\r\n    const catTable = (\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>Category</th>\r\n                    <th>Type</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {catTableBody}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n\r\n    const handleSubmit = () => {\r\n        addCategory();\r\n        setLoading(true);\r\n        setTimeout(() => {\r\n            fetchCategories(); \r\n            setLoading(false); \r\n        }, 1000);\r\n        \r\n    }\r\n\r\n    const addCatForm = (\r\n        <div>\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        value={catToAdd.name} \r\n                        name='name' \r\n                        onChange={handleChange}\r\n                        placeholder=\"Name of category\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>Type</Form.Label>\r\n                    <Form.Control \r\n                        as=\"select\"\r\n                        value={catToAdd.is_expense} \r\n                        name='is_expense' \r\n                        onChange={handleChange}\r\n                    >\r\n                        <option value={true}>Expense</option>\r\n                        <option value={false}>Income</option>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n            </Form>\r\n            <Button onClick={handleSubmit}>Add</Button>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Container className='categories'>\r\n            <Row>\r\n                <Col>\r\n                    Categories:\r\n                    {loading ? <div>*LOADING*</div> : null}\r\n                    {catTable}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    Add Category\r\n                    {addCatForm}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Categories;","import { useState, useEffect } from 'react';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\n// import './App.css';\r\n\r\nconst numDaysinMonth = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n\r\nfunction Expenses({ userID }) {\r\n\r\n    const fetchTransactions = () => {\r\n        fetch(\"https://18.220.140.183:443/get-transactions\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({\r\n                start: dates.start, \r\n                end: dates.end, \r\n                user_id: userID\r\n            }),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.text())\r\n        .then(res => setTransactions(JSON.parse(res)))\r\n        .catch(err => err);\r\n    }\r\n\r\n    const fetchCategories = () => {\r\n        fetch(\"https://18.220.140.183:443/get-categories\", {\r\n            method: 'POST',\r\n            body: JSON.stringify({user_id: userID}),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.text())\r\n        .then(res => setCategories(JSON.parse(res)))\r\n        .catch(err => err);\r\n    }\r\n\r\n    const deleteTransaction = (id) => {\r\n        fetch(\"https://18.220.140.183:443/delete-transaction\", {\r\n            method: 'DELETE',\r\n            body: JSON.stringify({id}),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n        .then(res => res.text())\r\n        .then(res => console.log(res))\r\n        .catch(err => err);\r\n    }\r\n\r\n    const getStartEnd = () => {\r\n        var today = new Date();\r\n        const dd = String(today.getDate()).padStart(2, '0');\r\n        const mm = String(today.getMonth() + 1).padStart(2, '0'); //January is 0!\r\n        const yyyy = today.getFullYear();\r\n\r\n        today = yyyy + '-' + mm + '-' + dd;\r\n\r\n        if (parseInt(dd) <= 15) {\r\n            return {\r\n                start: yyyy + '-' + mm + '-' + '01',\r\n                end: yyyy + '-' + mm + '-' + '15'\r\n            }\r\n        }\r\n        else {\r\n            const lastDayOfMonth = String(numDaysinMonth[parseInt(mm) - 1])\r\n            return {\r\n                start: yyyy + '-' + mm + '-' + '15',\r\n                end: yyyy + '-' + mm + '-' + lastDayOfMonth\r\n            }\r\n        }\r\n    }    \r\n\r\n    const [transactions, setTransactions] = useState([]);\r\n    const [categories, setCategories] = useState([]);\r\n    const [dates, setDates] = useState(getStartEnd());\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        fetchTransactions();\r\n        fetchCategories();\r\n    }, [userID])\r\n\r\n    const handleChange = event => {\r\n        setDates({\r\n            ...dates,\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const handleSubmit = () => {\r\n        fetchTransactions();\r\n        fetchCategories();\r\n    }\r\n\r\n    const handleDelete = event => {\r\n        deleteTransaction(event.target.id)\r\n        setLoading(true);\r\n        setTimeout(() => {  \r\n            fetchCategories(); \r\n            fetchTransactions();\r\n            setLoading(false); \r\n        }, 1000);\r\n    }\r\n\r\n    const dateInput = (\r\n        <>\r\n            <Form>\r\n                <Form.Group>\r\n                    <Form.Label>Start</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        value={dates.start} \r\n                        name='start' \r\n                        onChange={handleChange}\r\n                        placeholder=\"YEAR-MONTH-DAY\"\r\n                    />\r\n                </Form.Group>\r\n                <Form.Group>\r\n                    <Form.Label>End</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        value={dates.end} \r\n                        name='end' \r\n                        onChange={handleChange}\r\n                        placeholder=\"YEAR-MONTH-DAY\"\r\n                    />\r\n                </Form.Group>\r\n            </Form>\r\n            <Button onClick={handleSubmit}>Submit</Button>\r\n        </>\r\n    )\r\n\r\n    const expenseTableBody = (\r\n        transactions.map(transaction => {\r\n            const category = categories.find(category => category.id === transaction.category_id) || {is_expense: true}\r\n            return (\r\n                <tr key={transaction.id}>\r\n                    <td>{transaction.description}</td>\r\n                    <td>{'$' + transaction.amount}</td>\r\n                    <td>{category.name}</td>\r\n                    <td>{transaction.date && transaction.date.substring(0, 10)}</td>\r\n                    <td className={!category.is_expense ? 'green': ''}>{category.is_expense ? 'Expense' : 'Income'}</td>\r\n                    <td><Button onClick={handleDelete} id={transaction.id}>DELETE</Button></td>\r\n                </tr>\r\n            )\r\n        })\r\n    )\r\n\r\n    const expenseTable = (\r\n        <Table striped bordered hover>\r\n            <thead>\r\n                <tr>\r\n                    <th>Description</th>\r\n                    <th>Amount</th>\r\n                    <th>Category</th>\r\n                    <th>Date</th>\r\n                    <th>Type</th>\r\n                    <th>Actions</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {expenseTableBody}\r\n            </tbody>\r\n        </Table>\r\n    )\r\n\r\n    const summary = () => {\r\n        let totalSpent = 0 \r\n        transactions.forEach(transaction => {\r\n            const category = categories.find(category => category.id === transaction.category_id) || {is_expense: true}\r\n            category.is_expense? totalSpent += transaction.amount : totalSpent -= transaction.amount \r\n        })\r\n        return (\r\n            <div>\r\n                You spent ${totalSpent} between {dates.start} and {dates.end}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Container className='edit-categories'>\r\n            <Row>\r\n                <Col>\r\n                    {loading ? <div>*LOADING*</div> : null}\r\n                    {dateInput}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {expenseTable}\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    {summary()}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Expenses;\r\n","import { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport GoogleLogin from 'react-google-login';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport Home from './components/Home';\nimport Categories from './components/Categories';\nimport Expenses from './components/Expenses';\n\nimport './App.css';\n\nfunction App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(false)\n  const [userID, setUserID] = useState();\n  const [name, setName] = useState();\n\n  const onSignIn = googleUser => {\n    console.log('in function');\n    console.log('user', googleUser);\n    var profile = googleUser.getBasicProfile();\n\n    // console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n    // console.log('Name: ' + profile.getName());\n    // console.log('Image URL: ' + profile.getImageUrl());\n    // console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n    console.log('res ', googleUser.getAuthResponse());\n    console.log('token', googleUser.getAuthResponse().id_token);\n\n    setIsLoggedIn(true)\n    setUserID(profile.getId());\n    setName(profile.getName());\n  }\n\n  console.log('id in app', userID);\n\n  return (\n    <Router>\n      <div className='app'>\n        <GoogleLogin\n          clientId=\"180544136485-bildtjala9v81f48f6uq90epp6l7dhnt.apps.googleusercontent.com\"\n          buttonText={isLoggedIn ? name + \" is signed in\" : \"Login with Google\"}\n          onSuccess={onSignIn}\n          onFailure={error => console.log('error with google stuff', error)}\n          cookiePolicy={'single_host_origin'}\n          isSignedIn={true}\n        >\n        </GoogleLogin>\n        <div>{name ? null : 'Please sign in to use the app'}</div>\n        {\n          isLoggedIn\n          ? (\n            <>\n              <div>\n                <Link to=\"/\">Home</Link>{' '}\n                <Link to=\"/categories\">Categories</Link>{' '}\n                <Link to='/expenses'>Expenses</Link>{' '}\n              </div>\n              <div>\n                <Switch>\n                  <Route path=\"/categories\">\n                    <div>\n                      <Categories userID={userID}/>\n                    </div>\n                  </Route>\n                  <Route path=\"/expenses\">\n                    <div>\n                      <Expenses userID={userID}/>\n                    </div>\n                  </Route>\n                  <Route path=\"/\">\n                      <Home userID={userID}/>\n                  </Route>\n                </Switch>\n              </div>\n            </>\n          )\n          : null\n        }\n        \n      </div>\n    </Router>\n    \n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}